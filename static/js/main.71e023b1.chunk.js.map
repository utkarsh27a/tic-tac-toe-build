{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","calculateWinner","squares","lines","i","length","_lines$i","Object","_home_utkarsh_Projects_react_tic_tac_toe_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__","b","c","Board","_this","this","renderSquare","React","Component","Game","_this2","_home_utkarsh_Projects_react_tic_tac_toe_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_utkarsh_Projects_react_tic_tac_toe_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_utkarsh_Projects_react_tic_tac_toe_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","history","Array","fill","stepNumber","xIsNext","step","setState","slice","concat","setTimeout","alert","status","_this3","current","winner","moves","map","move","desc","key","jumpTo","handleClick","restartGame","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71e023b1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n        <button\n            className=\"square\"\n            onClick={() => props.onClick()}\n        >\n            { props.value }\n        </button>\n    );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nclass Board extends React.Component {\n\n    renderSquare(i) {\n        return <Square\n            value={this.props.squares[i]}\n            onClick={() => this.props.onClick(i)}\n        />;\n    }\n\n\n    render() {\n        return (\n          <div>\n            <div className=\"board-row\">\n              {this.renderSquare(0)}\n              {this.renderSquare(1)}\n              {this.renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n              {this.renderSquare(3)}\n              {this.renderSquare(4)}\n              {this.renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n              {this.renderSquare(6)}\n              {this.renderSquare(7)}\n              {this.renderSquare(8)}\n            </div>\n          </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            stepNumber: 0,\n            xIsNext: true,\n        };\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[this.state.stepNumber];\n        const squares = current.squares.slice();\n\n        if (calculateWinner(squares) || squares[i]) {\n          return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n        setTimeout(function() {\n            if (calculateWinner(squares)) {\n              return alert(squares[i] + \" won!!!\");\n            }\n        }, 0);\n    }\n\n    restartGame() {\n        this.setState({\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            stepNumber: 0,\n            xIsNext: true,\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ? 'Go to move #' + move : 'Go to game start';\n            return (\n                <li key={move}>\n                    <button\n                        className=\"btn\"\n                        onClick={() => this.jumpTo(move)}\n                    >\n                        {desc}\n                    </button>\n                </li>\n            );\n        });\n\n        let status;\n        if (winner) {\n          status = 'Winner: ' + winner;\n        } else {\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        return (\n          <div className=\"game\">\n            <div className=\"game-board\">\n              <Board\n                squares={current.squares}\n                onClick={(i) => this.handleClick(i)}\n              />\n\n            </div>\n            <div className=\"game-info\">\n              <div><h2 className=\"text-center\"> {status} </h2></div>\n              <ol>{moves}</ol>\n            </div>\n            <div>\n                <button\n                    className=\"btn\"\n                    onClick={() => this.restartGame()}\n                >\n                    Restart Game\n                </button>\n            </div>\n          </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}